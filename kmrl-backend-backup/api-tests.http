### Automated Document Overload Solution API - REST Client Tests
### Base URL: http://localhost:3000

###########################################
# 1. Health Check
###########################################

### Health Check
GET http://localhost:3000/health
Content-Type: application/json

### API Info
GET http://localhost:3000/
Content-Type: application/json

###########################################
# 2. Document Upload
###########################################

### Upload PDF Document
POST http://localhost:3000/upload
Content-Type: multipart/form-data; boundary=boundary

--boundary
Content-Disposition: form-data; name="document"; filename="sample.pdf"
Content-Type: application/pdf

< ./sample.pdf
--boundary
Content-Disposition: form-data; name="department"

IT
--boundary--

### Upload Image Document (JPG)
POST http://localhost:3000/upload
Content-Type: multipart/form-data; boundary=boundary

--boundary
Content-Disposition: form-data; name="document"; filename="invoice.jpg"
Content-Type: image/jpeg

< ./invoice.jpg
--boundary
Content-Disposition: form-data; name="department"

Finance
--boundary--

### Upload Word Document
POST http://localhost:3000/upload
Content-Type: multipart/form-data; boundary=boundary

--boundary
Content-Disposition: form-data; name="document"; filename="contract.docx"
Content-Type: application/vnd.openxmlformats-officedocument.wordprocessingml.document

< ./contract.docx
--boundary
Content-Disposition: form-data; name="department"

Legal
--boundary--

###########################################
# 3. Document Retrieval
###########################################

### Get All Documents
GET http://localhost:3000/documents
Content-Type: application/json

### Get Document by ID
GET http://localhost:3000/documents/1
Content-Type: application/json

### Get Document by ID (non-existent)
GET http://localhost:3000/documents/999
Content-Type: application/json

###########################################
# 4. Document Search
###########################################

### Search for "invoice"
GET http://localhost:3000/search?q=invoice
Content-Type: application/json

### Search for "contract"
GET http://localhost:3000/search?q=contract
Content-Type: application/json

### Search for "payment"
GET http://localhost:3000/search?q=payment
Content-Type: application/json

### Search with empty query (should return error)
GET http://localhost:3000/search
Content-Type: application/json

### Search with complex query
GET http://localhost:3000/search?q=total amount due
Content-Type: application/json

###########################################
# 5. ML Data Extraction
###########################################

### Extract ML data from document ID 1
POST http://localhost:3000/ml/extract
Content-Type: application/json

{
  "document_id": 1
}

### Extract ML data from document ID 2
POST http://localhost:3000/ml/extract
Content-Type: application/json

{
  "document_id": 2
}

### Extract ML data from non-existent document
POST http://localhost:3000/ml/extract
Content-Type: application/json

{
  "document_id": 999
}

### Extract ML data with missing document_id (should return error)
POST http://localhost:3000/ml/extract
Content-Type: application/json

{
  "some_other_field": "value"
}

###########################################
# 6. Statistics (if implemented)
###########################################

### Get storage statistics
GET http://localhost:3000/stats
Content-Type: application/json

###########################################
# 7. Error Testing
###########################################

### Test unsupported file type upload
POST http://localhost:3000/upload
Content-Type: multipart/form-data; boundary=boundary

--boundary
Content-Disposition: form-data; name="document"; filename="script.txt"
Content-Type: text/plain

Some text content here
--boundary
Content-Disposition: form-data; name="department"

IT
--boundary--

### Test upload without department
POST http://localhost:3000/upload
Content-Type: multipart/form-data; boundary=boundary

--boundary
Content-Disposition: form-data; name="document"; filename="test.pdf"
Content-Type: application/pdf

< ./test.pdf
--boundary--

### Test upload without file
POST http://localhost:3000/upload
Content-Type: multipart/form-data; boundary=boundary

--boundary
Content-Disposition: form-data; name="department"

IT
--boundary--

### Test invalid endpoint
GET http://localhost:3000/invalid-endpoint
Content-Type: application/json

###########################################
# 8. cURL Examples (for reference)
###########################################

# Upload a document
# curl -X POST -F "document=@sample.pdf" -F "department=IT" http://localhost:3000/upload

# Get all documents
# curl http://localhost:3000/documents

# Search documents
# curl "http://localhost:3000/search?q=invoice"

# Extract ML data
# curl -X POST -H "Content-Type: application/json" -d '{"document_id": 1}' http://localhost:3000/ml/extract

# Health check
# curl http://localhost:3000/health